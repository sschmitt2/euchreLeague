[DEBUG] 2020-03-04 10:41:05.235 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 10:41:05.257 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 10:41:05.262 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-04 10:41:05.313 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-04 10:41:05.314 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-04 10:41:05.469 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 10:41:05.476 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 10:41:05.480 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 10:41:05.649 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 10:41:05.660 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 10:41:05.660 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-04 10:41:05.669 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-04 10:41:05.682 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:05.682 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:05.682 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:05.683 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64693226
[DEBUG] 2020-03-04 10:41:05.683 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e746d37
[DEBUG] 2020-03-04 10:41:05.683 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2324bfe7
[DEBUG] 2020-03-04 10:41:05.684 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:05.684 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:05.684 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:05.684 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:05.685 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:05.685 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:05.685 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:05.685 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:05.686 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:05.686 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:05.686 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:05.686 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:05.687 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:05.687 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:05.687 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:05.687 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:05.687 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:05.687 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:05.688 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:05.688 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:05.688 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:05.688 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:05.688 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:05.689 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:05.689 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:05.689 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:05.689 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:05.690 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65b66b08
[DEBUG] 2020-03-04 10:41:05.690 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28e19366
[DEBUG] 2020-03-04 10:41:05.690 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:05.690 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:05.691 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:05.691 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:05.693 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:05.693 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:05.693 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:05.693 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:05.694 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:05.694 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:05.694 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:05.695 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:05.695 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:05.695 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:05.696 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:05.696 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:05.696 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:05.697 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:05.697 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:05.697 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:05.698 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:05.698 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:05.698 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:05.698 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:05.698 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:05.699 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4088741b
[DEBUG] 2020-03-04 10:41:05.699 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:05.699 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:05.699 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:05.699 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@702c436b
[DEBUG] 2020-03-04 10:41:05.700 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:05.700 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:05.700 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:05.701 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:05.701 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:05.701 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:05.701 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:05.701 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:05.702 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:05.702 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:05.702 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@782bf610
[DEBUG] 2020-03-04 10:41:05.702 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:05.702 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:05.703 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:05.703 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:05.703 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:05.703 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:05.704 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6cd166b8
[DEBUG] 2020-03-04 10:41:05.704 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@38af1bf6
[DEBUG] 2020-03-04 10:41:05.704 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:05.704 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:05.704 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:05.705 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:05.705 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:05.705 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:05.705 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5ac6c4f2
[DEBUG] 2020-03-04 10:41:05.705 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4893b344
[DEBUG] 2020-03-04 10:41:05.706 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:05.706 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:05.706 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62db0521
[DEBUG] 2020-03-04 10:41:05.706 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:05.706 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:05.707 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:05.707 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:05.707 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21ac5eb4
[DEBUG] 2020-03-04 10:41:05.707 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6428591a
[DEBUG] 2020-03-04 10:41:05.708 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77d680e6
[DEBUG] 2020-03-04 10:41:05.709 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:05.709 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@680a66dd
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2dd8239
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@472698d
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b7683d4
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40712ee9
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e53b094
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39fa8ad2
[DEBUG] 2020-03-04 10:41:05.710 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76ddd61a
[DEBUG] 2020-03-04 10:41:05.723 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 10:41:05.723 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 10:41:05.724 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:05.724 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:05.725 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 10:41:05.725 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 10:41:05.725 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 10:41:05.726 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:05.726 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 10:41:05.726 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 10:41:05.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 10:41:05.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 10:41:05.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:05.727 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 10:41:05.730 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_EuchreLeague
[INFO ] 2020-03-04 10:41:05.730 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 10:41:05.730 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 10:41:05.782 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 10:41:05.851 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:05.851 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:05.851 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 10:41:05.867 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-03-04 10:41:05.886 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 10:41:05.904 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 10:41:05.930 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 10:41:05.933 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6296474f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4288d98e]
[DEBUG] 2020-03-04 10:41:05.972 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.User
[DEBUG] 2020-03-04 10:41:05.994 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:05.996 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 10:41:05.997 [main] EntityBinder - Bind entity com.euchreleague.entity.User on table user
[DEBUG] 2020-03-04 10:41:06.008 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.009 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.010 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:id]
[DEBUG] 2020-03-04 10:41:06.010 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.011 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.013 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.014 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.014 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 10:41:06.014 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:firstName]
[DEBUG] 2020-03-04 10:41:06.014 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.014 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 10:41:06.014 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.014 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 10:41:06.015 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:lastName]
[DEBUG] 2020-03-04 10:41:06.015 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.015 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 10:41:06.015 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.015 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-03-04 10:41:06.015 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userName]
[DEBUG] 2020-03-04 10:41:06.015 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.015 [main] PropertyBinder - Building property userName
[DEBUG] 2020-03-04 10:41:06.015 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.015 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-03-04 10:41:06.015 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userPassword]
[DEBUG] 2020-03-04 10:41:06.015 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.015 [main] PropertyBinder - Building property userPassword
[DEBUG] 2020-03-04 10:41:06.016 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.016 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.017 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.020 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.020 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.021 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='userRoles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 10:41:06.021 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.021 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.021 [main] CollectionBinder - Collection role: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.022 [main] PropertyBinder - Building property userRoles
[DEBUG] 2020-03-04 10:41:06.023 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.UserRoles
[DEBUG] 2020-03-04 10:41:06.023 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.023 [main] EntityBinder - Import with entity name UserRoles
[DEBUG] 2020-03-04 10:41:06.023 [main] EntityBinder - Bind entity com.euchreleague.entity.UserRoles on table user_roles
[DEBUG] 2020-03-04 10:41:06.025 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.025 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.025 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:id]
[DEBUG] 2020-03-04 10:41:06.025 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.025 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.025 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.026 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.026 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-03-04 10:41:06.026 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:roleName]
[DEBUG] 2020-03-04 10:41:06.026 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.026 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-03-04 10:41:06.026 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.026 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.026 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.027 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.Team
[DEBUG] 2020-03-04 10:41:06.027 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.027 [main] EntityBinder - Import with entity name Team
[DEBUG] 2020-03-04 10:41:06.027 [main] EntityBinder - Bind entity com.euchreleague.entity.Team on table team
[DEBUG] 2020-03-04 10:41:06.027 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.027 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.028 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:id]
[DEBUG] 2020-03-04 10:41:06.028 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.028 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.028 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 10:41:06.028 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:name]
[DEBUG] 2020-03-04 10:41:06.028 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-04 10:41:06.028 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player1_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - MetadataSourceProcessor property playerOneId with lazy=false
[DEBUG] 2020-03-04 10:41:06.028 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerOneId]
[DEBUG] 2020-03-04 10:41:06.028 [main] SimpleValueBinder - building SimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - Building property playerOneId
[DEBUG] 2020-03-04 10:41:06.028 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player2_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - MetadataSourceProcessor property playerTwoId with lazy=false
[DEBUG] 2020-03-04 10:41:06.028 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerTwoId]
[DEBUG] 2020-03-04 10:41:06.028 [main] SimpleValueBinder - building SimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.028 [main] PropertyBinder - Building property playerTwoId
[DEBUG] 2020-03-04 10:41:06.029 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.029 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.029 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.029 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.030 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 10:41:06.030 [main] SimpleValueBinder - Starting fillSimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.030 [main] SimpleValueBinder - Starting fillSimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.031 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-03-04 10:41:06.031 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-03-04 10:41:06.031 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [team]
[DEBUG] 2020-03-04 10:41:06.031 [main] CollectionSecondPass - Second pass for collection: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.057 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 10:41:06.057 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 10:41:06.057 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-03-04 10:41:06.060 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 10:41:06.060 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 10:41:06.061 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 10:41:06.072 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 10:41:06.073 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 10:41:06.073 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64693226
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e746d37
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2324bfe7
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.073 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65b66b08
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28e19366
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.074 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4088741b
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@702c436b
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@782bf610
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6cd166b8
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@38af1bf6
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.075 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5ac6c4f2
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4893b344
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62db0521
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21ac5eb4
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6428591a
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77d680e6
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43c57161
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d902300
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2db33feb
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30c3ae63
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58658f63
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54e12f4c
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60990e5c
[DEBUG] 2020-03-04 10:41:06.076 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d84049a
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.077 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 10:41:06.077 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_EuchreLeague
[INFO ] 2020-03-04 10:41:06.077 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 10:41:06.078 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 10:41:06.087 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 10:41:06.110 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.110 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.110 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 10:41:06.110 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-03-04 10:41:06.110 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 10:41:06.110 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 10:41:06.113 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 10:41:06.113 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7cfac39f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@158ae284]
[DEBUG] 2020-03-04 10:41:06.113 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.User
[DEBUG] 2020-03-04 10:41:06.113 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.113 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 10:41:06.113 [main] EntityBinder - Bind entity com.euchreleague.entity.User on table user
[DEBUG] 2020-03-04 10:41:06.114 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.114 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.114 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:id]
[DEBUG] 2020-03-04 10:41:06.114 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.114 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.114 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.114 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.114 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 10:41:06.114 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:firstName]
[DEBUG] 2020-03-04 10:41:06.114 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.114 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 10:41:06.114 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 10:41:06.115 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:lastName]
[DEBUG] 2020-03-04 10:41:06.115 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-03-04 10:41:06.115 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userName]
[DEBUG] 2020-03-04 10:41:06.115 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - Building property userName
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-03-04 10:41:06.115 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userPassword]
[DEBUG] 2020-03-04 10:41:06.115 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - Building property userPassword
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='userRoles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.115 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.115 [main] CollectionBinder - Collection role: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.115 [main] PropertyBinder - Building property userRoles
[DEBUG] 2020-03-04 10:41:06.116 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.UserRoles
[DEBUG] 2020-03-04 10:41:06.116 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.116 [main] EntityBinder - Import with entity name UserRoles
[DEBUG] 2020-03-04 10:41:06.116 [main] EntityBinder - Bind entity com.euchreleague.entity.UserRoles on table user_roles
[DEBUG] 2020-03-04 10:41:06.116 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.116 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.116 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:id]
[DEBUG] 2020-03-04 10:41:06.116 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.116 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.116 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.116 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.116 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-03-04 10:41:06.116 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:roleName]
[DEBUG] 2020-03-04 10:41:06.116 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.119 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-03-04 10:41:06.119 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.119 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.119 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.Team
[DEBUG] 2020-03-04 10:41:06.119 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.119 [main] EntityBinder - Import with entity name Team
[DEBUG] 2020-03-04 10:41:06.119 [main] EntityBinder - Bind entity com.euchreleague.entity.Team on table team
[DEBUG] 2020-03-04 10:41:06.124 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.124 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.124 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:id]
[DEBUG] 2020-03-04 10:41:06.124 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.125 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 10:41:06.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:name]
[DEBUG] 2020-03-04 10:41:06.125 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-04 10:41:06.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player1_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - MetadataSourceProcessor property playerOneId with lazy=false
[DEBUG] 2020-03-04 10:41:06.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerOneId]
[DEBUG] 2020-03-04 10:41:06.125 [main] SimpleValueBinder - building SimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - Building property playerOneId
[DEBUG] 2020-03-04 10:41:06.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player2_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - MetadataSourceProcessor property playerTwoId with lazy=false
[DEBUG] 2020-03-04 10:41:06.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerTwoId]
[DEBUG] 2020-03-04 10:41:06.125 [main] SimpleValueBinder - building SimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - Building property playerTwoId
[DEBUG] 2020-03-04 10:41:06.125 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.125 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.126 [main] SimpleValueBinder - Starting fillSimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.126 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-03-04 10:41:06.126 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-03-04 10:41:06.126 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [team]
[DEBUG] 2020-03-04 10:41:06.126 [main] CollectionSecondPass - Second pass for collection: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.156 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 10:41:06.156 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 10:41:06.156 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-03-04 10:41:06.158 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 10:41:06.158 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 10:41:06.159 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 10:41:06.169 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 10:41:06.169 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 10:41:06.169 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64693226
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e746d37
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2324bfe7
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.169 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65b66b08
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28e19366
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.170 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4088741b
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@702c436b
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@782bf610
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6cd166b8
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@38af1bf6
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5ac6c4f2
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4893b344
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62db0521
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.171 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21ac5eb4
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6428591a
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77d680e6
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b47731f
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@233db8e9
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40c2ce52
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18a19e
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60a7e509
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e13f304
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@787508ca
[DEBUG] 2020-03-04 10:41:06.172 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d24420b
[DEBUG] 2020-03-04 10:41:06.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 10:41:06.173 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_EuchreLeague
[INFO ] 2020-03-04 10:41:06.173 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 10:41:06.173 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 10:41:06.182 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 10:41:06.214 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.214 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.215 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 10:41:06.215 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-03-04 10:41:06.215 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 10:41:06.215 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 10:41:06.223 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 10:41:06.223 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23da79eb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@168b4cb0]
[DEBUG] 2020-03-04 10:41:06.223 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.User
[DEBUG] 2020-03-04 10:41:06.223 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.224 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 10:41:06.224 [main] EntityBinder - Bind entity com.euchreleague.entity.User on table user
[DEBUG] 2020-03-04 10:41:06.224 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.224 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.224 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:id]
[DEBUG] 2020-03-04 10:41:06.226 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.226 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.226 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 10:41:06.226 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:firstName]
[DEBUG] 2020-03-04 10:41:06.226 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 10:41:06.226 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 10:41:06.226 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:lastName]
[DEBUG] 2020-03-04 10:41:06.226 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 10:41:06.226 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-03-04 10:41:06.226 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userName]
[DEBUG] 2020-03-04 10:41:06.226 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - Building property userName
[DEBUG] 2020-03-04 10:41:06.226 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-03-04 10:41:06.226 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userPassword]
[DEBUG] 2020-03-04 10:41:06.226 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.226 [main] PropertyBinder - Building property userPassword
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='userRoles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.231 [main] CollectionBinder - Collection role: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.231 [main] PropertyBinder - Building property userRoles
[DEBUG] 2020-03-04 10:41:06.231 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.UserRoles
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.231 [main] EntityBinder - Import with entity name UserRoles
[DEBUG] 2020-03-04 10:41:06.231 [main] EntityBinder - Bind entity com.euchreleague.entity.UserRoles on table user_roles
[DEBUG] 2020-03-04 10:41:06.231 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.232 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.232 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:id]
[DEBUG] 2020-03-04 10:41:06.232 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.232 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.232 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.232 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.232 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-03-04 10:41:06.232 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:roleName]
[DEBUG] 2020-03-04 10:41:06.232 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.232 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-03-04 10:41:06.232 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.232 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.232 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.232 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.Team
[DEBUG] 2020-03-04 10:41:06.232 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.232 [main] EntityBinder - Import with entity name Team
[DEBUG] 2020-03-04 10:41:06.232 [main] EntityBinder - Bind entity com.euchreleague.entity.Team on table team
[DEBUG] 2020-03-04 10:41:06.233 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.233 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:id]
[DEBUG] 2020-03-04 10:41:06.233 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.233 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.233 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 10:41:06.233 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:name]
[DEBUG] 2020-03-04 10:41:06.233 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-04 10:41:06.233 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player1_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - MetadataSourceProcessor property playerOneId with lazy=false
[DEBUG] 2020-03-04 10:41:06.233 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerOneId]
[DEBUG] 2020-03-04 10:41:06.233 [main] SimpleValueBinder - building SimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - Building property playerOneId
[DEBUG] 2020-03-04 10:41:06.233 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player2_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - MetadataSourceProcessor property playerTwoId with lazy=false
[DEBUG] 2020-03-04 10:41:06.233 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerTwoId]
[DEBUG] 2020-03-04 10:41:06.233 [main] SimpleValueBinder - building SimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - Building property playerTwoId
[DEBUG] 2020-03-04 10:41:06.233 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.233 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.233 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.234 [main] SimpleValueBinder - Starting fillSimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.234 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-03-04 10:41:06.234 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-03-04 10:41:06.234 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [team]
[DEBUG] 2020-03-04 10:41:06.234 [main] CollectionSecondPass - Second pass for collection: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.264 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 10:41:06.264 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 10:41:06.264 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-03-04 10:41:06.266 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 10:41:06.266 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 10:41:06.267 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 10:41:06.278 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 10:41:06.278 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 10:41:06.278 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64693226
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e746d37
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2324bfe7
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.278 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65b66b08
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28e19366
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4088741b
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@702c436b
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.279 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@782bf610
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6cd166b8
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@38af1bf6
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5ac6c4f2
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4893b344
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62db0521
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21ac5eb4
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6428591a
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77d680e6
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78ec89a6
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3596b249
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7237f3c1
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@781711b7
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@642a16aa
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@642ee49c
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@294aba23
[DEBUG] 2020-03-04 10:41:06.280 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69909c14
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.281 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 10:41:06.281 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_EuchreLeague
[INFO ] 2020-03-04 10:41:06.281 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 10:41:06.281 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 10:41:06.292 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 10:41:06.313 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.313 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.313 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 10:41:06.313 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-03-04 10:41:06.314 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 10:41:06.314 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 10:41:06.316 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 10:41:06.317 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f3f0ae] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6baf25d7]
[DEBUG] 2020-03-04 10:41:06.317 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.User
[DEBUG] 2020-03-04 10:41:06.317 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.317 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 10:41:06.317 [main] EntityBinder - Bind entity com.euchreleague.entity.User on table user
[DEBUG] 2020-03-04 10:41:06.317 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.318 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:id]
[DEBUG] 2020-03-04 10:41:06.318 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.318 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.318 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 10:41:06.318 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:firstName]
[DEBUG] 2020-03-04 10:41:06.318 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 10:41:06.318 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 10:41:06.318 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:lastName]
[DEBUG] 2020-03-04 10:41:06.318 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 10:41:06.318 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-03-04 10:41:06.318 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userName]
[DEBUG] 2020-03-04 10:41:06.318 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - Building property userName
[DEBUG] 2020-03-04 10:41:06.318 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-03-04 10:41:06.318 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userPassword]
[DEBUG] 2020-03-04 10:41:06.318 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.318 [main] PropertyBinder - Building property userPassword
[DEBUG] 2020-03-04 10:41:06.318 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.318 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='userRoles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.319 [main] CollectionBinder - Collection role: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.319 [main] PropertyBinder - Building property userRoles
[DEBUG] 2020-03-04 10:41:06.319 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.UserRoles
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.319 [main] EntityBinder - Import with entity name UserRoles
[DEBUG] 2020-03-04 10:41:06.319 [main] EntityBinder - Bind entity com.euchreleague.entity.UserRoles on table user_roles
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.319 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.319 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:id]
[DEBUG] 2020-03-04 10:41:06.319 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.319 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.319 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.319 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-03-04 10:41:06.319 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:roleName]
[DEBUG] 2020-03-04 10:41:06.319 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.320 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-03-04 10:41:06.320 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.320 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.320 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.320 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.Team
[DEBUG] 2020-03-04 10:41:06.320 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.320 [main] EntityBinder - Import with entity name Team
[DEBUG] 2020-03-04 10:41:06.320 [main] EntityBinder - Bind entity com.euchreleague.entity.Team on table team
[DEBUG] 2020-03-04 10:41:06.320 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.320 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.320 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:id]
[DEBUG] 2020-03-04 10:41:06.320 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.320 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.320 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.320 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.320 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 10:41:06.320 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:name]
[DEBUG] 2020-03-04 10:41:06.320 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 10:41:06.320 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-04 10:41:06.331 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player1_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.331 [main] PropertyBinder - MetadataSourceProcessor property playerOneId with lazy=false
[DEBUG] 2020-03-04 10:41:06.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerOneId]
[DEBUG] 2020-03-04 10:41:06.333 [main] SimpleValueBinder - building SimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.333 [main] PropertyBinder - Building property playerOneId
[DEBUG] 2020-03-04 10:41:06.333 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player2_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.333 [main] PropertyBinder - MetadataSourceProcessor property playerTwoId with lazy=false
[DEBUG] 2020-03-04 10:41:06.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerTwoId]
[DEBUG] 2020-03-04 10:41:06.333 [main] SimpleValueBinder - building SimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.333 [main] PropertyBinder - Building property playerTwoId
[DEBUG] 2020-03-04 10:41:06.333 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.333 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.333 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.334 [main] SimpleValueBinder - Starting fillSimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.334 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-03-04 10:41:06.334 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-03-04 10:41:06.334 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [team]
[DEBUG] 2020-03-04 10:41:06.334 [main] CollectionSecondPass - Second pass for collection: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.373 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 10:41:06.373 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 10:41:06.373 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-03-04 10:41:06.381 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 10:41:06.381 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 10:41:06.384 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 10:41:06.421 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 10:41:06.421 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 10:41:06.423 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@240f6c41
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64693226
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e746d37
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2324bfe7
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@213bd3d5
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bebcd65
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e84111a
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ea899a9
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67594471
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d48673
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@96a75da
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d5508e0
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68fe48d7
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d7b1f1c
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65b66b08
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28e19366
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cb042da
[DEBUG] 2020-03-04 10:41:06.423 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@747d1932
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@148c7c4b
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6aba5d30
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c6aed22
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1416a80a
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b5183ec
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b0e5507
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51d9b06c
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c6c6f24
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12ffd1de
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e530163
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4088741b
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c2b58c0
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@702c436b
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.424 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37303f12
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ab5afc7
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ed03652
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc76fa1
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e141e42
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@782bf610
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5524b72f
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.426 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e6f2bb5
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6cd166b8
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@38af1bf6
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f08caf
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72725ee1
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5ac6c4f2
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4893b344
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350a94ce
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62db0521
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@285f38f6
[DEBUG] 2020-03-04 10:41:06.429 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4339e0de
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21ac5eb4
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6428591a
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@77d680e6
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20e3c449
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c1d59cd
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76cf841
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@297c9a9b
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20999517
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ec63f8
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66223d94
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2bc7db89
[DEBUG] 2020-03-04 10:41:06.430 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@479ac2cb
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 10:41:06.431 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 10:41:06.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 10:41:06.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 10:41:06.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 10:41:06.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 10:41:06.433 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_EuchreLeague
[INFO ] 2020-03-04 10:41:06.433 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 10:41:06.433 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 10:41:06.446 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 10:41:06.478 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.478 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 10:41:06.479 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 10:41:06.479 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-03-04 10:41:06.479 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 10:41:06.479 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 10:41:06.481 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 10:41:06.481 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c33e528] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5df63359]
[DEBUG] 2020-03-04 10:41:06.482 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.User
[DEBUG] 2020-03-04 10:41:06.482 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.482 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 10:41:06.482 [main] EntityBinder - Bind entity com.euchreleague.entity.User on table user
[DEBUG] 2020-03-04 10:41:06.482 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.482 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.482 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:id]
[DEBUG] 2020-03-04 10:41:06.482 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.482 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.482 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.482 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.482 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 10:41:06.482 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:firstName]
[DEBUG] 2020-03-04 10:41:06.482 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.482 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 10:41:06.483 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:lastName]
[DEBUG] 2020-03-04 10:41:06.483 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-03-04 10:41:06.483 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userName]
[DEBUG] 2020-03-04 10:41:06.483 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - Building property userName
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2020-03-04 10:41:06.483 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.User:userPassword]
[DEBUG] 2020-03-04 10:41:06.483 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - Building property userPassword
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userRoles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='userRoles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user_name'}
[DEBUG] 2020-03-04 10:41:06.483 [main] CollectionBinder - Collection role: com.euchreleague.entity.User.userRoles
[DEBUG] 2020-03-04 10:41:06.483 [main] PropertyBinder - Building property userRoles
[DEBUG] 2020-03-04 10:41:06.483 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.UserRoles
[DEBUG] 2020-03-04 10:41:06.483 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.483 [main] EntityBinder - Import with entity name UserRoles
[DEBUG] 2020-03-04 10:41:06.483 [main] EntityBinder - Bind entity com.euchreleague.entity.UserRoles on table user_roles
[DEBUG] 2020-03-04 10:41:06.484 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.484 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.484 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:id]
[DEBUG] 2020-03-04 10:41:06.484 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.484 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.484 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.484 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.484 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-03-04 10:41:06.484 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.UserRoles:roleName]
[DEBUG] 2020-03-04 10:41:06.484 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.484 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-03-04 10:41:06.484 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.484 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.484 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.484 [main] AnnotationBinder - Binding entity from annotated class: com.euchreleague.entity.Team
[DEBUG] 2020-03-04 10:41:06.484 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 10:41:06.484 [main] EntityBinder - Import with entity name Team
[DEBUG] 2020-03-04 10:41:06.486 [main] EntityBinder - Bind entity com.euchreleague.entity.Team on table team
[DEBUG] 2020-03-04 10:41:06.486 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.486 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-03-04 10:41:06.486 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:id]
[DEBUG] 2020-03-04 10:41:06.486 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-03-04 10:41:06.486 [main] PropertyBinder - Building property id
[DEBUG] 2020-03-04 10:41:06.486 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 10:41:06.486 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.486 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 10:41:06.486 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:name]
[DEBUG] 2020-03-04 10:41:06.486 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 10:41:06.486 [main] PropertyBinder - Building property name
[DEBUG] 2020-03-04 10:41:06.486 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player1_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.486 [main] PropertyBinder - MetadataSourceProcessor property playerOneId with lazy=false
[DEBUG] 2020-03-04 10:41:06.486 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerOneId]
[DEBUG] 2020-03-04 10:41:06.486 [main] SimpleValueBinder - building SimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.486 [main] PropertyBinder - Building property playerOneId
[DEBUG] 2020-03-04 10:41:06.487 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=player2_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.487 [main] PropertyBinder - MetadataSourceProcessor property playerTwoId with lazy=false
[DEBUG] 2020-03-04 10:41:06.487 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.euchreleague.entity.Team:playerTwoId]
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - building SimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.487 [main] PropertyBinder - Building property playerTwoId
[DEBUG] 2020-03-04 10:41:06.487 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 10:41:06.487 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(team), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 10:41:06.487 [main] PropertyBinder - Building property user
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for playerOneId
[DEBUG] 2020-03-04 10:41:06.487 [main] SimpleValueBinder - Starting fillSimpleValue for playerTwoId
[DEBUG] 2020-03-04 10:41:06.487 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-03-04 10:41:06.487 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-03-04 10:41:06.487 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [team]
[DEBUG] 2020-03-04 10:41:06.487 [main] CollectionSecondPass - Second pass for collection: com.euchreleague.entity.User.userRoles
